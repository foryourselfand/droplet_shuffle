//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GlassAnimationComponent glassAnimation { get { return (GlassAnimationComponent)GetComponent(GameComponentsLookup.GlassAnimation); } }
    public bool hasGlassAnimation { get { return HasComponent(GameComponentsLookup.GlassAnimation); } }

    public void AddGlassAnimation(int newY, DG.Tweening.Ease newEase) {
        var index = GameComponentsLookup.GlassAnimation;
        var component = (GlassAnimationComponent)CreateComponent(index, typeof(GlassAnimationComponent));
        component.y = newY;
        component.ease = newEase;
        AddComponent(index, component);
    }

    public void ReplaceGlassAnimation(int newY, DG.Tweening.Ease newEase) {
        var index = GameComponentsLookup.GlassAnimation;
        var component = (GlassAnimationComponent)CreateComponent(index, typeof(GlassAnimationComponent));
        component.y = newY;
        component.ease = newEase;
        ReplaceComponent(index, component);
    }

    public void RemoveGlassAnimation() {
        RemoveComponent(GameComponentsLookup.GlassAnimation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGlassAnimation;

    public static Entitas.IMatcher<GameEntity> GlassAnimation {
        get {
            if (_matcherGlassAnimation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GlassAnimation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGlassAnimation = matcher;
            }

            return _matcherGlassAnimation;
        }
    }
}
