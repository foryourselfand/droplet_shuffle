//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity viewParentEntity { get { return GetGroup(GameMatcher.ViewParent).GetSingleEntity(); } }
    public ViewParentComponent viewParent { get { return viewParentEntity.viewParent; } }
    public bool hasViewParent { get { return viewParentEntity != null; } }

    public GameEntity SetViewParent(UnityEngine.Transform newValue) {
        if (hasViewParent) {
            throw new Entitas.EntitasException("Could not set ViewParent!\n" + this + " already has an entity with ViewParentComponent!",
                "You should check if the context already has a viewParentEntity before setting it or use context.ReplaceViewParent().");
        }
        var entity = CreateEntity();
        entity.AddViewParent(newValue);
        return entity;
    }

    public void ReplaceViewParent(UnityEngine.Transform newValue) {
        var entity = viewParentEntity;
        if (entity == null) {
            entity = SetViewParent(newValue);
        } else {
            entity.ReplaceViewParent(newValue);
        }
    }

    public void RemoveViewParent() {
        viewParentEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ViewParentComponent viewParent { get { return (ViewParentComponent)GetComponent(GameComponentsLookup.ViewParent); } }
    public bool hasViewParent { get { return HasComponent(GameComponentsLookup.ViewParent); } }

    public void AddViewParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.ViewParent;
        var component = (ViewParentComponent)CreateComponent(index, typeof(ViewParentComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceViewParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.ViewParent;
        var component = (ViewParentComponent)CreateComponent(index, typeof(ViewParentComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveViewParent() {
        RemoveComponent(GameComponentsLookup.ViewParent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherViewParent;

    public static Entitas.IMatcher<GameEntity> ViewParent {
        get {
            if (_matcherViewParent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ViewParent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherViewParent = matcher;
            }

            return _matcherViewParent;
        }
    }
}
